#!/usr/bin/env node

var exec = require('child_process').exec;
var exists = require('fs').existsSync;
var format = require('util').format;
var logger = require('../lib/logger');
var program = require('commander');
var readdir = require('fs').readdirSync;
var resolve = require('path').resolve;
var stat = require('fs').statSync;

/**
 * Usage.
 */

program
  .option('-d, --directory <dir>', 'the directory to look for templates in', resolve(process.env.HOME, '.khaos'))
  .usage('<template>');

/**
 * Help.
 */

program.on('--help', function(){
  console.log('  Examples:');
  console.log();
  console.log('    # update a local template named "node"');
  console.log('    $ khaos update node');
  console.log();
});

/**
 * Parse.
 */

program.parse(process.argv);

/**
 * Padding.
 */

console.log();
process.on('exit', function(){
  console.log();
});

/**
 * Settings.
 */

var template = program.args[0];
var dir = resolve(program.directory);

/**
 * Update one.
 */

if (template) {
  update(template);
}

/**
 * Update all.
 */

else {
  readdir(dir)
    .filter(directory)
    .forEach(update);
}

/**
 * Update a local template by `name`.
 *
 * @param {String} name
 */

function update(name){
  var path = resolve(dir, name);
  var git = resolve(path, '.git');
  if (!exists(path)) logger.fatal('Couldn\'t find a local template named "%s".', name);
  if (!exists(git)) return;

  var cmd = format('cd %s && git pull', path);
  exec(cmd, function(err, stdout, stderr){
    if (err) logger.fatal(err);
    logger.success('Updated the local "%s" template.', name);
  });
}

/**
 * Check whether a `file` is a directory.
 *
 * @param {String} file
 * @return {Boolean}
 */

function directory(file){
  var path = resolve(dir, template);
  return stat(path).isDirectory();
}
